---

#- name: Ensure that our repo and work dirs exist
#  file:
#    path: "{{ item }}"
#    state: directory
#  with_items:
#    - "{{ gitpush_repo_path }}"
#    - "{{ gitpush_workdir_path }}"

- name: Ensure that our repo dir exists
  file:
    path: "{{ gitpush_repo_path }}"
    state: directory
  become: no

- name: Ensure that our work dir exists
  file:
    path: "{{ gitpush_workdir_path }}"
    state: directory

- name: Is our repo created?
  stat:
    path: "{{ gitpush_repo_path }}/objects"
  register: gitpush_repo_stat

- name: Create the bare repo
  command: "git init --bare \"{{ gitpush_repo_path }}\""
  when: not gitpush_repo_stat.stat.exists
  become: no

#- name: Creating the post-receive hook
#  template:
#    src: post-receive.jinja2
#    dest: "{{ gitpush_repo_path }}/hooks/post-receive"
#    mode: u=rwx,g=rwx,o=

- set_fact:
    gitpush_host: "{{ ansible_host }}"

- name: Push our repo
  local_action: "command git push \"{{ ansible_user }}@{{ gitpush_host }}:{{ gitpush_repo_path }}\" HEAD:master"
  changed_when: git_push.stderr != "Everything up-to-date"
  register: git_push
  # We never use "become" on this local action because we're on the control machine and become_user
  # is probably a user that doesn't exist!
  become: no

- name: Checkout code from repo to working directory
  command: "git --work-tree='{{ gitpush_workdir_path }}' --git-dir='{{ gitpush_repo_path }}' checkout -f"
